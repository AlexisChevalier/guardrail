package com.twilio.swagger.codegen

object HttpHelper {
  def apply(code: String): Option[(Int, String)] = {
    code match {
      case "100" => Option((100, "Continue"))
      case "101" => Option((101, "SwitchingProtocols"))
      case "102" => Option((102, "Processing"))

      case "200" => Option((200, "OK"))
      case "201" => Option((201, "Created"))
      case "202" => Option((202, "Accepted"))
      case "203" => Option((203, "NonAuthoritativeInformation"))
      case "204" => Option((204, "NoContent"))
      case "205" => Option((205, "ResetContent"))
      case "206" => Option((206, "PartialContent"))
      case "207" => Option((207, "MultiStatus"))
      case "208" => Option((208, "AlreadyReported"))
      case "226" => Option((226, "IMUsed"))

      case "300" => Option((300, "MultipleChoices"))
      case "301" => Option((301, "MovedPermanently"))
      case "302" => Option((302, "Found"))
      case "303" => Option((303, "SeeOther"))
      case "304" => Option((304, "NotModified"))
      case "305" => Option((305, "UseProxy"))
      case "307" => Option((307, "TemporaryRedirect"))
      case "308" => Option((308, "PermanentRedirect"))

      case "400" => Option((400, "BadRequest"))
      case "401" => Option((401, "Unauthorized"))
      case "402" => Option((402, "PaymentRequired"))
      case "403" => Option((403, "Forbidden"))
      case "404" => Option((404, "NotFound"))
      case "405" => Option((405, "MethodNotAllowed"))
      case "406" => Option((406, "NotAcceptable"))
      case "407" => Option((407, "ProxyAuthenticationRequired"))
      case "408" => Option((408, "RequestTimeout"))
      case "409" => Option((409, "Conflict"))
      case "410" => Option((410, "Gone"))
      case "411" => Option((411, "LengthRequired"))
      case "412" => Option((412, "PreconditionFailed"))
      case "413" => Option((413, "RequestEntityTooLarge"))
      case "414" => Option((414, "RequestUriTooLong"))
      case "415" => Option((415, "UnsupportedMediaType"))
      case "416" => Option((416, "RequestedRangeNotSatisfiable"))
      case "417" => Option((417, "ExpectationFailed"))
      case "418" => Option((418, "ImATeapot"))
      case "420" => Option((420, "EnhanceYourCalm"))
      case "422" => Option((422, "UnprocessableEntity"))
      case "423" => Option((423, "Locked"))
      case "424" => Option((424, "FailedDependency"))
      case "425" => Option((425, "UnorderedCollection"))
      case "426" => Option((426, "UpgradeRequired"))
      case "428" => Option((428, "PreconditionRequired"))
      case "429" => Option((429, "TooManyRequests"))
      case "431" => Option((431, "RequestHeaderFieldsTooLarge"))
      case "449" => Option((449, "RetryWith"))
      case "450" => Option((450, "BlockedByParentalControls"))
      case "451" => Option((451, "UnavailableForLegalReasons"))

      case "500" => Option((500, "InternalServerError"))
      case "501" => Option((501, "NotImplemented"))
      case "502" => Option((502, "BadGateway"))
      case "503" => Option((503, "ServiceUnavailable"))
      case "504" => Option((504, "GatewayTimeout"))
      case "505" => Option((505, "HTTPVersionNotSupported"))
      case "506" => Option((506, "VariantAlsoNegotiates"))
      case "507" => Option((507, "InsufficientStorage"))
      case "508" => Option((508, "LoopDetected"))
      case "509" => Option((509, "BandwidthLimitExceeded"))
      case "510" => Option((510, "NotExtended"))
      case "511" => Option((511, "NetworkAuthenticationRequired"))
      case "598" => Option((598, "NetworkReadTimeout"))
      case "599" => Option((599, "NetworkConnectTimeout"))
      case _ => None
    }
  }
}
